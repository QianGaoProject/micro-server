
# stage1 - build react app first 
FROM node:17-alpine3.14 as build

# set working directory
WORKDIR /app
ENV PATH /app/node_modules/.bin:$PATH
COPY package.json /app/

RUN yarn --silent


ADD src /app/src
ADD public /app/public

RUN yarn build



# stage 2 - build the final image and copy the react build files
FROM nginx:1.19.6-alpine
COPY --from=build /app/build /etc/nginx/html
RUN rm /etc/nginx/conf.d/default.conf
COPY nginx.conf /etc/nginx/conf.d
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]


version: "3"
services:
  
  aquarium-api:
    build: ./aquarium-api
    command: uvicorn api.main:app --reload --host 0.0.0.0 --port 80
    container_name: aquarium-api
    image: aquarium-api
    restart: unless-stopped
    volumes:
      - ./aquarium-api:/usr/src/app/api
    ports:
      - 8002:80
    networks:
      - meet.jitsi
    environment:
      - ENVIRONMENT=dev
      - TESTING=0
    env_file:
      - ./aquarium-api/development.env
  conference:
    build: ./conference
    container_name: conference-external
    image: conference-external
    restart: unless-stopped
    ports:
      - 8003:8003
    networks:
      - meet.jitsi
      
    environment:
      - ENVIRONMENT=dev
      - TESTING=0
    depends_on:
      - aquarium-api
  demo:
    build: ./demo
    container_name: demo
    image: demo
    restart: unless-stopped
    ports:
      - 8004:8004
    volumes:
      - ./demo/dist:/usr/share/nginx/html   
    networks:
      - meet.jitsi
    
      
    environment:
      - ENVIRONMENT=dev
      - TESTING=0
    depends_on:
      - aquarium-api
networks:
    meet.jitsi:
 